/*
 * This file is generated by jOOQ.
*/
package com.sms.sis.db.tables;


import com.sms.sis.db.Keys;
import com.sms.sis.db.Sugarcrm_4_12;
import com.sms.sis.db.tables.records.DocumentRevisionsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DocumentRevisions extends TableImpl<DocumentRevisionsRecord> {

    private static final long serialVersionUID = -1101703018;

    /**
     * The reference instance of <code>sugarcrm_4_12.document_revisions</code>
     */
    public static final DocumentRevisions DOCUMENT_REVISIONS = new DocumentRevisions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DocumentRevisionsRecord> getRecordType() {
        return DocumentRevisionsRecord.class;
    }

    /**
     * The column <code>sugarcrm_4_12.document_revisions.id</code>.
     */
    public final TableField<DocumentRevisionsRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>sugarcrm_4_12.document_revisions.change_log</code>.
     */
    public final TableField<DocumentRevisionsRecord, String> CHANGE_LOG = createField("change_log", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>sugarcrm_4_12.document_revisions.document_id</code>.
     */
    public final TableField<DocumentRevisionsRecord, String> DOCUMENT_ID = createField("document_id", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "");

    /**
     * The column <code>sugarcrm_4_12.document_revisions.doc_id</code>.
     */
    public final TableField<DocumentRevisionsRecord, String> DOC_ID = createField("doc_id", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>sugarcrm_4_12.document_revisions.doc_type</code>.
     */
    public final TableField<DocumentRevisionsRecord, String> DOC_TYPE = createField("doc_type", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>sugarcrm_4_12.document_revisions.doc_url</code>.
     */
    public final TableField<DocumentRevisionsRecord, String> DOC_URL = createField("doc_url", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>sugarcrm_4_12.document_revisions.date_entered</code>.
     */
    public final TableField<DocumentRevisionsRecord, Timestamp> DATE_ENTERED = createField("date_entered", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>sugarcrm_4_12.document_revisions.created_by</code>.
     */
    public final TableField<DocumentRevisionsRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CHAR.length(36), this, "");

    /**
     * The column <code>sugarcrm_4_12.document_revisions.filename</code>.
     */
    public final TableField<DocumentRevisionsRecord, String> FILENAME = createField("filename", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>sugarcrm_4_12.document_revisions.file_ext</code>.
     */
    public final TableField<DocumentRevisionsRecord, String> FILE_EXT = createField("file_ext", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>sugarcrm_4_12.document_revisions.file_mime_type</code>.
     */
    public final TableField<DocumentRevisionsRecord, String> FILE_MIME_TYPE = createField("file_mime_type", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>sugarcrm_4_12.document_revisions.revision</code>.
     */
    public final TableField<DocumentRevisionsRecord, String> REVISION = createField("revision", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>sugarcrm_4_12.document_revisions.deleted</code>.
     */
    public final TableField<DocumentRevisionsRecord, Byte> DELETED = createField("deleted", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>sugarcrm_4_12.document_revisions.date_modified</code>.
     */
    public final TableField<DocumentRevisionsRecord, Timestamp> DATE_MODIFIED = createField("date_modified", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>sugarcrm_4_12.document_revisions</code> table reference
     */
    public DocumentRevisions() {
        this("document_revisions", null);
    }

    /**
     * Create an aliased <code>sugarcrm_4_12.document_revisions</code> table reference
     */
    public DocumentRevisions(String alias) {
        this(alias, DOCUMENT_REVISIONS);
    }

    private DocumentRevisions(String alias, Table<DocumentRevisionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private DocumentRevisions(String alias, Table<DocumentRevisionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sugarcrm_4_12.SUGARCRM_4_12;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DocumentRevisionsRecord> getPrimaryKey() {
        return Keys.KEY_DOCUMENT_REVISIONS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DocumentRevisionsRecord>> getKeys() {
        return Arrays.<UniqueKey<DocumentRevisionsRecord>>asList(Keys.KEY_DOCUMENT_REVISIONS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocumentRevisions as(String alias) {
        return new DocumentRevisions(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DocumentRevisions rename(String name) {
        return new DocumentRevisions(name, null);
    }
}
