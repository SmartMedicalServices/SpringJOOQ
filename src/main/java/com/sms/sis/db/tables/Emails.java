/*
 * This file is generated by jOOQ.
*/
package com.sms.sis.db.tables;


import com.sms.sis.db.Keys;
import com.sms.sis.db.Sugarcrm_4_12;
import com.sms.sis.db.tables.records.EmailsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Emails extends TableImpl<EmailsRecord> {

    private static final long serialVersionUID = -124556208;

    /**
     * The reference instance of <code>sugarcrm_4_12.emails</code>
     */
    public static final Emails EMAILS = new Emails();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EmailsRecord> getRecordType() {
        return EmailsRecord.class;
    }

    /**
     * The column <code>sugarcrm_4_12.emails.id</code>.
     */
    public final TableField<EmailsRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>sugarcrm_4_12.emails.date_entered</code>.
     */
    public final TableField<EmailsRecord, Timestamp> DATE_ENTERED = createField("date_entered", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>sugarcrm_4_12.emails.date_modified</code>.
     */
    public final TableField<EmailsRecord, Timestamp> DATE_MODIFIED = createField("date_modified", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>sugarcrm_4_12.emails.assigned_user_id</code>.
     */
    public final TableField<EmailsRecord, String> ASSIGNED_USER_ID = createField("assigned_user_id", org.jooq.impl.SQLDataType.CHAR.length(36), this, "");

    /**
     * The column <code>sugarcrm_4_12.emails.modified_user_id</code>.
     */
    public final TableField<EmailsRecord, String> MODIFIED_USER_ID = createField("modified_user_id", org.jooq.impl.SQLDataType.CHAR.length(36), this, "");

    /**
     * The column <code>sugarcrm_4_12.emails.created_by</code>.
     */
    public final TableField<EmailsRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CHAR.length(36), this, "");

    /**
     * The column <code>sugarcrm_4_12.emails.deleted</code>.
     */
    public final TableField<EmailsRecord, Byte> DELETED = createField("deleted", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>sugarcrm_4_12.emails.date_sent</code>.
     */
    public final TableField<EmailsRecord, Timestamp> DATE_SENT = createField("date_sent", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>sugarcrm_4_12.emails.message_id</code>.
     */
    public final TableField<EmailsRecord, String> MESSAGE_ID = createField("message_id", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>sugarcrm_4_12.emails.name</code>.
     */
    public final TableField<EmailsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>sugarcrm_4_12.emails.type</code>.
     */
    public final TableField<EmailsRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>sugarcrm_4_12.emails.status</code>.
     */
    public final TableField<EmailsRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>sugarcrm_4_12.emails.flagged</code>.
     */
    public final TableField<EmailsRecord, Byte> FLAGGED = createField("flagged", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>sugarcrm_4_12.emails.reply_to_status</code>.
     */
    public final TableField<EmailsRecord, Byte> REPLY_TO_STATUS = createField("reply_to_status", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>sugarcrm_4_12.emails.intent</code>.
     */
    public final TableField<EmailsRecord, String> INTENT = createField("intent", org.jooq.impl.SQLDataType.VARCHAR.length(100).defaultValue(org.jooq.impl.DSL.inline("pick", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>sugarcrm_4_12.emails.mailbox_id</code>.
     */
    public final TableField<EmailsRecord, String> MAILBOX_ID = createField("mailbox_id", org.jooq.impl.SQLDataType.CHAR.length(36), this, "");

    /**
     * The column <code>sugarcrm_4_12.emails.parent_type</code>.
     */
    public final TableField<EmailsRecord, String> PARENT_TYPE = createField("parent_type", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>sugarcrm_4_12.emails.parent_id</code>.
     */
    public final TableField<EmailsRecord, String> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.CHAR.length(36), this, "");

    /**
     * Create a <code>sugarcrm_4_12.emails</code> table reference
     */
    public Emails() {
        this("emails", null);
    }

    /**
     * Create an aliased <code>sugarcrm_4_12.emails</code> table reference
     */
    public Emails(String alias) {
        this(alias, EMAILS);
    }

    private Emails(String alias, Table<EmailsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Emails(String alias, Table<EmailsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sugarcrm_4_12.SUGARCRM_4_12;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EmailsRecord> getPrimaryKey() {
        return Keys.KEY_EMAILS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EmailsRecord>> getKeys() {
        return Arrays.<UniqueKey<EmailsRecord>>asList(Keys.KEY_EMAILS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Emails as(String alias) {
        return new Emails(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Emails rename(String name) {
        return new Emails(name, null);
    }
}
