/*
 * This file is generated by jOOQ.
*/
package com.sms.sis.db.tables;


import com.sms.sis.db.Keys;
import com.sms.sis.db.Sugarcrm_4_12;
import com.sms.sis.db.tables.records.MeetingsRecord;

import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Meetings extends TableImpl<MeetingsRecord> {

    private static final long serialVersionUID = -1217662808;

    /**
     * The reference instance of <code>sugarcrm_4_12.meetings</code>
     */
    public static final Meetings MEETINGS = new Meetings();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MeetingsRecord> getRecordType() {
        return MeetingsRecord.class;
    }

    /**
     * The column <code>sugarcrm_4_12.meetings.id</code>.
     */
    public final TableField<MeetingsRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.name</code>.
     */
    public final TableField<MeetingsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.date_entered</code>.
     */
    public final TableField<MeetingsRecord, Timestamp> DATE_ENTERED = createField("date_entered", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.date_modified</code>.
     */
    public final TableField<MeetingsRecord, Timestamp> DATE_MODIFIED = createField("date_modified", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.modified_user_id</code>.
     */
    public final TableField<MeetingsRecord, String> MODIFIED_USER_ID = createField("modified_user_id", org.jooq.impl.SQLDataType.CHAR.length(36), this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.created_by</code>.
     */
    public final TableField<MeetingsRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CHAR.length(36), this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.description</code>.
     */
    public final TableField<MeetingsRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.deleted</code>.
     */
    public final TableField<MeetingsRecord, Byte> DELETED = createField("deleted", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.assigned_user_id</code>.
     */
    public final TableField<MeetingsRecord, String> ASSIGNED_USER_ID = createField("assigned_user_id", org.jooq.impl.SQLDataType.CHAR.length(36), this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.location</code>.
     */
    public final TableField<MeetingsRecord, String> LOCATION = createField("location", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.password</code>.
     */
    public final TableField<MeetingsRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.join_url</code>.
     */
    public final TableField<MeetingsRecord, String> JOIN_URL = createField("join_url", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.host_url</code>.
     */
    public final TableField<MeetingsRecord, String> HOST_URL = createField("host_url", org.jooq.impl.SQLDataType.VARCHAR.length(400), this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.displayed_url</code>.
     */
    public final TableField<MeetingsRecord, String> DISPLAYED_URL = createField("displayed_url", org.jooq.impl.SQLDataType.VARCHAR.length(400), this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.creator</code>.
     */
    public final TableField<MeetingsRecord, String> CREATOR = createField("creator", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.external_id</code>.
     */
    public final TableField<MeetingsRecord, String> EXTERNAL_ID = createField("external_id", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.duration_hours</code>.
     */
    public final TableField<MeetingsRecord, Integer> DURATION_HOURS = createField("duration_hours", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.duration_minutes</code>.
     */
    public final TableField<MeetingsRecord, Integer> DURATION_MINUTES = createField("duration_minutes", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.date_start</code>.
     */
    public final TableField<MeetingsRecord, Timestamp> DATE_START = createField("date_start", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.date_end</code>.
     */
    public final TableField<MeetingsRecord, Timestamp> DATE_END = createField("date_end", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.parent_type</code>.
     */
    public final TableField<MeetingsRecord, String> PARENT_TYPE = createField("parent_type", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.status</code>.
     */
    public final TableField<MeetingsRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(100).defaultValue(org.jooq.impl.DSL.inline("Planned", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.type</code>.
     */
    public final TableField<MeetingsRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaultValue(org.jooq.impl.DSL.inline("Sugar", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.parent_id</code>.
     */
    public final TableField<MeetingsRecord, String> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.CHAR.length(36), this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.reminder_time</code>.
     */
    public final TableField<MeetingsRecord, Integer> REMINDER_TIME = createField("reminder_time", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("-1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.email_reminder_time</code>.
     */
    public final TableField<MeetingsRecord, Integer> EMAIL_REMINDER_TIME = createField("email_reminder_time", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("-1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.email_reminder_sent</code>.
     */
    public final TableField<MeetingsRecord, Byte> EMAIL_REMINDER_SENT = createField("email_reminder_sent", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.outlook_id</code>.
     */
    public final TableField<MeetingsRecord, String> OUTLOOK_ID = createField("outlook_id", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.sequence</code>.
     */
    public final TableField<MeetingsRecord, Integer> SEQUENCE = createField("sequence", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.repeat_type</code>.
     */
    public final TableField<MeetingsRecord, String> REPEAT_TYPE = createField("repeat_type", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.repeat_interval</code>.
     */
    public final TableField<MeetingsRecord, Integer> REPEAT_INTERVAL = createField("repeat_interval", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.repeat_dow</code>.
     */
    public final TableField<MeetingsRecord, String> REPEAT_DOW = createField("repeat_dow", org.jooq.impl.SQLDataType.VARCHAR.length(7), this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.repeat_until</code>.
     */
    public final TableField<MeetingsRecord, Date> REPEAT_UNTIL = createField("repeat_until", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.repeat_count</code>.
     */
    public final TableField<MeetingsRecord, Integer> REPEAT_COUNT = createField("repeat_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.repeat_parent_id</code>.
     */
    public final TableField<MeetingsRecord, String> REPEAT_PARENT_ID = createField("repeat_parent_id", org.jooq.impl.SQLDataType.CHAR.length(36), this, "");

    /**
     * The column <code>sugarcrm_4_12.meetings.recurring_source</code>.
     */
    public final TableField<MeetingsRecord, String> RECURRING_SOURCE = createField("recurring_source", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "");

    /**
     * Create a <code>sugarcrm_4_12.meetings</code> table reference
     */
    public Meetings() {
        this("meetings", null);
    }

    /**
     * Create an aliased <code>sugarcrm_4_12.meetings</code> table reference
     */
    public Meetings(String alias) {
        this(alias, MEETINGS);
    }

    private Meetings(String alias, Table<MeetingsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Meetings(String alias, Table<MeetingsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sugarcrm_4_12.SUGARCRM_4_12;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MeetingsRecord> getPrimaryKey() {
        return Keys.KEY_MEETINGS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MeetingsRecord>> getKeys() {
        return Arrays.<UniqueKey<MeetingsRecord>>asList(Keys.KEY_MEETINGS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Meetings as(String alias) {
        return new Meetings(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Meetings rename(String name) {
        return new Meetings(name, null);
    }
}
