/*
 * This file is generated by jOOQ.
*/
package com.sms.sis.db.tables;


import com.sms.sis.db.Keys;
import com.sms.sis.db.Sugarcrm_4_12;
import com.sms.sis.db.tables.records.OauthTokensRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OauthTokens extends TableImpl<OauthTokensRecord> {

    private static final long serialVersionUID = 1929177822;

    /**
     * The reference instance of <code>sugarcrm_4_12.oauth_tokens</code>
     */
    public static final OauthTokens OAUTH_TOKENS = new OauthTokens();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OauthTokensRecord> getRecordType() {
        return OauthTokensRecord.class;
    }

    /**
     * The column <code>sugarcrm_4_12.oauth_tokens.id</code>.
     */
    public final TableField<OauthTokensRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>sugarcrm_4_12.oauth_tokens.secret</code>.
     */
    public final TableField<OauthTokensRecord, String> SECRET = createField("secret", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "");

    /**
     * The column <code>sugarcrm_4_12.oauth_tokens.tstate</code>.
     */
    public final TableField<OauthTokensRecord, String> TSTATE = createField("tstate", org.jooq.impl.SQLDataType.VARCHAR.length(1), this, "");

    /**
     * The column <code>sugarcrm_4_12.oauth_tokens.consumer</code>.
     */
    public final TableField<OauthTokensRecord, String> CONSUMER = createField("consumer", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>sugarcrm_4_12.oauth_tokens.token_ts</code>.
     */
    public final TableField<OauthTokensRecord, Long> TOKEN_TS = createField("token_ts", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sugarcrm_4_12.oauth_tokens.verify</code>.
     */
    public final TableField<OauthTokensRecord, String> VERIFY = createField("verify", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "");

    /**
     * The column <code>sugarcrm_4_12.oauth_tokens.deleted</code>.
     */
    public final TableField<OauthTokensRecord, Byte> DELETED = createField("deleted", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>sugarcrm_4_12.oauth_tokens.callback_url</code>.
     */
    public final TableField<OauthTokensRecord, String> CALLBACK_URL = createField("callback_url", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>sugarcrm_4_12.oauth_tokens.assigned_user_id</code>.
     */
    public final TableField<OauthTokensRecord, String> ASSIGNED_USER_ID = createField("assigned_user_id", org.jooq.impl.SQLDataType.CHAR.length(36), this, "");

    /**
     * Create a <code>sugarcrm_4_12.oauth_tokens</code> table reference
     */
    public OauthTokens() {
        this("oauth_tokens", null);
    }

    /**
     * Create an aliased <code>sugarcrm_4_12.oauth_tokens</code> table reference
     */
    public OauthTokens(String alias) {
        this(alias, OAUTH_TOKENS);
    }

    private OauthTokens(String alias, Table<OauthTokensRecord> aliased) {
        this(alias, aliased, null);
    }

    private OauthTokens(String alias, Table<OauthTokensRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sugarcrm_4_12.SUGARCRM_4_12;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OauthTokensRecord> getPrimaryKey() {
        return Keys.KEY_OAUTH_TOKENS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OauthTokensRecord>> getKeys() {
        return Arrays.<UniqueKey<OauthTokensRecord>>asList(Keys.KEY_OAUTH_TOKENS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OauthTokens as(String alias) {
        return new OauthTokens(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OauthTokens rename(String name) {
        return new OauthTokens(name, null);
    }
}
