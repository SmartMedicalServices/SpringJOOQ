/*
 * This file is generated by jOOQ.
*/
package com.sms.sis.db.tables;


import com.sms.sis.db.Keys;
import com.sms.sis.db.Sugarcrm_4_12;
import com.sms.sis.db.tables.records.AccountsOpportunitiesRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountsOpportunities extends TableImpl<AccountsOpportunitiesRecord> {

    private static final long serialVersionUID = 2029020649;

    /**
     * The reference instance of <code>sugarcrm_4_12.accounts_opportunities</code>
     */
    public static final AccountsOpportunities ACCOUNTS_OPPORTUNITIES = new AccountsOpportunities();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AccountsOpportunitiesRecord> getRecordType() {
        return AccountsOpportunitiesRecord.class;
    }

    /**
     * The column <code>sugarcrm_4_12.accounts_opportunities.id</code>.
     */
    public final TableField<AccountsOpportunitiesRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts_opportunities.opportunity_id</code>.
     */
    public final TableField<AccountsOpportunitiesRecord, String> OPPORTUNITY_ID = createField("opportunity_id", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts_opportunities.account_id</code>.
     */
    public final TableField<AccountsOpportunitiesRecord, String> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts_opportunities.date_modified</code>.
     */
    public final TableField<AccountsOpportunitiesRecord, Timestamp> DATE_MODIFIED = createField("date_modified", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts_opportunities.deleted</code>.
     */
    public final TableField<AccountsOpportunitiesRecord, Byte> DELETED = createField("deleted", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * Create a <code>sugarcrm_4_12.accounts_opportunities</code> table reference
     */
    public AccountsOpportunities() {
        this("accounts_opportunities", null);
    }

    /**
     * Create an aliased <code>sugarcrm_4_12.accounts_opportunities</code> table reference
     */
    public AccountsOpportunities(String alias) {
        this(alias, ACCOUNTS_OPPORTUNITIES);
    }

    private AccountsOpportunities(String alias, Table<AccountsOpportunitiesRecord> aliased) {
        this(alias, aliased, null);
    }

    private AccountsOpportunities(String alias, Table<AccountsOpportunitiesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sugarcrm_4_12.SUGARCRM_4_12;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AccountsOpportunitiesRecord> getPrimaryKey() {
        return Keys.KEY_ACCOUNTS_OPPORTUNITIES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AccountsOpportunitiesRecord>> getKeys() {
        return Arrays.<UniqueKey<AccountsOpportunitiesRecord>>asList(Keys.KEY_ACCOUNTS_OPPORTUNITIES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountsOpportunities as(String alias) {
        return new AccountsOpportunities(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AccountsOpportunities rename(String name) {
        return new AccountsOpportunities(name, null);
    }
}
