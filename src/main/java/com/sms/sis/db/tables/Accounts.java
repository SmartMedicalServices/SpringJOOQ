/*
 * This file is generated by jOOQ.
*/
package com.sms.sis.db.tables;


import com.sms.sis.db.Keys;
import com.sms.sis.db.Sugarcrm_4_12;
import com.sms.sis.db.tables.records.AccountsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Accounts extends TableImpl<AccountsRecord> {

    private static final long serialVersionUID = -538570832;

    /**
     * The reference instance of <code>sugarcrm_4_12.accounts</code>
     */
    public static final Accounts ACCOUNTS = new Accounts();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AccountsRecord> getRecordType() {
        return AccountsRecord.class;
    }

    /**
     * The column <code>sugarcrm_4_12.accounts.id</code>.
     */
    public final TableField<AccountsRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.name</code>.
     */
    public final TableField<AccountsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(150), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.date_entered</code>.
     */
    public final TableField<AccountsRecord, Timestamp> DATE_ENTERED = createField("date_entered", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.date_modified</code>.
     */
    public final TableField<AccountsRecord, Timestamp> DATE_MODIFIED = createField("date_modified", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.modified_user_id</code>.
     */
    public final TableField<AccountsRecord, String> MODIFIED_USER_ID = createField("modified_user_id", org.jooq.impl.SQLDataType.CHAR.length(36), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.created_by</code>.
     */
    public final TableField<AccountsRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CHAR.length(36), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.description</code>.
     */
    public final TableField<AccountsRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.deleted</code>.
     */
    public final TableField<AccountsRecord, Byte> DELETED = createField("deleted", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.assigned_user_id</code>.
     */
    public final TableField<AccountsRecord, String> ASSIGNED_USER_ID = createField("assigned_user_id", org.jooq.impl.SQLDataType.CHAR.length(36), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.account_type</code>.
     */
    public final TableField<AccountsRecord, String> ACCOUNT_TYPE = createField("account_type", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.industry</code>.
     */
    public final TableField<AccountsRecord, String> INDUSTRY = createField("industry", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.annual_revenue</code>.
     */
    public final TableField<AccountsRecord, String> ANNUAL_REVENUE = createField("annual_revenue", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.phone_fax</code>.
     */
    public final TableField<AccountsRecord, String> PHONE_FAX = createField("phone_fax", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.billing_address_street</code>.
     */
    public final TableField<AccountsRecord, String> BILLING_ADDRESS_STREET = createField("billing_address_street", org.jooq.impl.SQLDataType.VARCHAR.length(150), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.billing_address_city</code>.
     */
    public final TableField<AccountsRecord, String> BILLING_ADDRESS_CITY = createField("billing_address_city", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.billing_address_state</code>.
     */
    public final TableField<AccountsRecord, String> BILLING_ADDRESS_STATE = createField("billing_address_state", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.billing_address_postalcode</code>.
     */
    public final TableField<AccountsRecord, String> BILLING_ADDRESS_POSTALCODE = createField("billing_address_postalcode", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.billing_address_country</code>.
     */
    public final TableField<AccountsRecord, String> BILLING_ADDRESS_COUNTRY = createField("billing_address_country", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.rating</code>.
     */
    public final TableField<AccountsRecord, String> RATING = createField("rating", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.phone_office</code>.
     */
    public final TableField<AccountsRecord, String> PHONE_OFFICE = createField("phone_office", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.phone_alternate</code>.
     */
    public final TableField<AccountsRecord, String> PHONE_ALTERNATE = createField("phone_alternate", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.website</code>.
     */
    public final TableField<AccountsRecord, String> WEBSITE = createField("website", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.ownership</code>.
     */
    public final TableField<AccountsRecord, String> OWNERSHIP = createField("ownership", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.employees</code>.
     */
    public final TableField<AccountsRecord, String> EMPLOYEES = createField("employees", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.ticker_symbol</code>.
     */
    public final TableField<AccountsRecord, String> TICKER_SYMBOL = createField("ticker_symbol", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.shipping_address_street</code>.
     */
    public final TableField<AccountsRecord, String> SHIPPING_ADDRESS_STREET = createField("shipping_address_street", org.jooq.impl.SQLDataType.VARCHAR.length(150), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.shipping_address_city</code>.
     */
    public final TableField<AccountsRecord, String> SHIPPING_ADDRESS_CITY = createField("shipping_address_city", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.shipping_address_state</code>.
     */
    public final TableField<AccountsRecord, String> SHIPPING_ADDRESS_STATE = createField("shipping_address_state", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.shipping_address_postalcode</code>.
     */
    public final TableField<AccountsRecord, String> SHIPPING_ADDRESS_POSTALCODE = createField("shipping_address_postalcode", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.shipping_address_country</code>.
     */
    public final TableField<AccountsRecord, String> SHIPPING_ADDRESS_COUNTRY = createField("shipping_address_country", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.parent_id</code>.
     */
    public final TableField<AccountsRecord, String> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.CHAR.length(36), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.sic_code</code>.
     */
    public final TableField<AccountsRecord, String> SIC_CODE = createField("sic_code", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.campaign_id</code>.
     */
    public final TableField<AccountsRecord, String> CAMPAIGN_ID = createField("campaign_id", org.jooq.impl.SQLDataType.CHAR.length(36), this, "");

    /**
     * The column <code>sugarcrm_4_12.accounts.cmid</code>.
     */
    public final TableField<AccountsRecord, Integer> CMID = createField("cmid", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>sugarcrm_4_12.accounts</code> table reference
     */
    public Accounts() {
        this("accounts", null);
    }

    /**
     * Create an aliased <code>sugarcrm_4_12.accounts</code> table reference
     */
    public Accounts(String alias) {
        this(alias, ACCOUNTS);
    }

    private Accounts(String alias, Table<AccountsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Accounts(String alias, Table<AccountsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sugarcrm_4_12.SUGARCRM_4_12;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AccountsRecord> getPrimaryKey() {
        return Keys.KEY_ACCOUNTS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AccountsRecord>> getKeys() {
        return Arrays.<UniqueKey<AccountsRecord>>asList(Keys.KEY_ACCOUNTS_PRIMARY, Keys.KEY_ACCOUNTS_CMID_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Accounts as(String alias) {
        return new Accounts(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Accounts rename(String name) {
        return new Accounts(name, null);
    }
}
