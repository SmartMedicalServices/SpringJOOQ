/*
 * This file is generated by jOOQ.
*/
package com.sms.sis.db.tables.records;


import com.sms.sis.db.tables.UsersCstm;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersCstmRecord extends UpdatableRecordImpl<UsersCstmRecord> implements Record5<String, Byte, Byte, String, String> {

    private static final long serialVersionUID = -26916552;

    /**
     * Setter for <code>sugarcrm_4_12.users_cstm.id_c</code>.
     */
    public void setIdC(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>sugarcrm_4_12.users_cstm.id_c</code>.
     */
    public String getIdC() {
        return (String) get(0);
    }

    /**
     * Setter for <code>sugarcrm_4_12.users_cstm.asterisk_outbound_c</code>.
     */
    public void setAsteriskOutboundC(Byte value) {
        set(1, value);
    }

    /**
     * Getter for <code>sugarcrm_4_12.users_cstm.asterisk_outbound_c</code>.
     */
    public Byte getAsteriskOutboundC() {
        return (Byte) get(1);
    }

    /**
     * Setter for <code>sugarcrm_4_12.users_cstm.asterisk_inbound_c</code>.
     */
    public void setAsteriskInboundC(Byte value) {
        set(2, value);
    }

    /**
     * Getter for <code>sugarcrm_4_12.users_cstm.asterisk_inbound_c</code>.
     */
    public Byte getAsteriskInboundC() {
        return (Byte) get(2);
    }

    /**
     * Setter for <code>sugarcrm_4_12.users_cstm.asterisk_ext_c</code>.
     */
    public void setAsteriskExtC(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>sugarcrm_4_12.users_cstm.asterisk_ext_c</code>.
     */
    public String getAsteriskExtC() {
        return (String) get(3);
    }

    /**
     * Setter for <code>sugarcrm_4_12.users_cstm.idnumber_c</code>.
     */
    public void setIdnumberC(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>sugarcrm_4_12.users_cstm.idnumber_c</code>.
     */
    public String getIdnumberC() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<String, Byte, Byte, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<String, Byte, Byte, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return UsersCstm.USERS_CSTM.ID_C;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field2() {
        return UsersCstm.USERS_CSTM.ASTERISK_OUTBOUND_C;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field3() {
        return UsersCstm.USERS_CSTM.ASTERISK_INBOUND_C;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return UsersCstm.USERS_CSTM.ASTERISK_EXT_C;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return UsersCstm.USERS_CSTM.IDNUMBER_C;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getIdC();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value2() {
        return getAsteriskOutboundC();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value3() {
        return getAsteriskInboundC();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getAsteriskExtC();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getIdnumberC();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersCstmRecord value1(String value) {
        setIdC(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersCstmRecord value2(Byte value) {
        setAsteriskOutboundC(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersCstmRecord value3(Byte value) {
        setAsteriskInboundC(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersCstmRecord value4(String value) {
        setAsteriskExtC(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersCstmRecord value5(String value) {
        setIdnumberC(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersCstmRecord values(String value1, Byte value2, Byte value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersCstmRecord
     */
    public UsersCstmRecord() {
        super(UsersCstm.USERS_CSTM);
    }

    /**
     * Create a detached, initialised UsersCstmRecord
     */
    public UsersCstmRecord(String idC, Byte asteriskOutboundC, Byte asteriskInboundC, String asteriskExtC, String idnumberC) {
        super(UsersCstm.USERS_CSTM);

        set(0, idC);
        set(1, asteriskOutboundC);
        set(2, asteriskInboundC);
        set(3, asteriskExtC);
        set(4, idnumberC);
    }
}
