/*
 * This file is generated by jOOQ.
*/
package com.sms.sis.db.tables;


import com.sms.sis.db.Keys;
import com.sms.sis.db.Sugarcrm_4_12;
import com.sms.sis.db.tables.records.ScInstallmentsRecord;

import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScInstallments extends TableImpl<ScInstallmentsRecord> {

    private static final long serialVersionUID = 723053438;

    /**
     * The reference instance of <code>sugarcrm_4_12.sc_installments</code>
     */
    public static final ScInstallments SC_INSTALLMENTS = new ScInstallments();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ScInstallmentsRecord> getRecordType() {
        return ScInstallmentsRecord.class;
    }

    /**
     * The column <code>sugarcrm_4_12.sc_installments.id</code>.
     */
    public final TableField<ScInstallmentsRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>sugarcrm_4_12.sc_installments.name</code>.
     */
    public final TableField<ScInstallmentsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>sugarcrm_4_12.sc_installments.date_entered</code>.
     */
    public final TableField<ScInstallmentsRecord, Timestamp> DATE_ENTERED = createField("date_entered", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>sugarcrm_4_12.sc_installments.date_modified</code>.
     */
    public final TableField<ScInstallmentsRecord, Timestamp> DATE_MODIFIED = createField("date_modified", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>sugarcrm_4_12.sc_installments.modified_user_id</code>.
     */
    public final TableField<ScInstallmentsRecord, String> MODIFIED_USER_ID = createField("modified_user_id", org.jooq.impl.SQLDataType.CHAR.length(36), this, "");

    /**
     * The column <code>sugarcrm_4_12.sc_installments.created_by</code>.
     */
    public final TableField<ScInstallmentsRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CHAR.length(36), this, "");

    /**
     * The column <code>sugarcrm_4_12.sc_installments.description</code>.
     */
    public final TableField<ScInstallmentsRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>sugarcrm_4_12.sc_installments.deleted</code>.
     */
    public final TableField<ScInstallmentsRecord, Byte> DELETED = createField("deleted", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>sugarcrm_4_12.sc_installments.assigned_user_id</code>.
     */
    public final TableField<ScInstallmentsRecord, String> ASSIGNED_USER_ID = createField("assigned_user_id", org.jooq.impl.SQLDataType.CHAR.length(36), this, "");

    /**
     * The column <code>sugarcrm_4_12.sc_installments.due_date</code>.
     */
    public final TableField<ScInstallmentsRecord, Date> DUE_DATE = createField("due_date", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>sugarcrm_4_12.sc_installments.installmentvalue</code>.
     */
    public final TableField<ScInstallmentsRecord, Double> INSTALLMENTVALUE = createField("installmentvalue", org.jooq.impl.SQLDataType.FLOAT, this, "");

    /**
     * The column <code>sugarcrm_4_12.sc_installments.paid</code>.
     */
    public final TableField<ScInstallmentsRecord, Byte> PAID = createField("paid", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>sugarcrm_4_12.sc_installments.remindermade</code>.
     */
    public final TableField<ScInstallmentsRecord, Byte> REMINDERMADE = createField("remindermade", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * Create a <code>sugarcrm_4_12.sc_installments</code> table reference
     */
    public ScInstallments() {
        this("sc_installments", null);
    }

    /**
     * Create an aliased <code>sugarcrm_4_12.sc_installments</code> table reference
     */
    public ScInstallments(String alias) {
        this(alias, SC_INSTALLMENTS);
    }

    private ScInstallments(String alias, Table<ScInstallmentsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ScInstallments(String alias, Table<ScInstallmentsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sugarcrm_4_12.SUGARCRM_4_12;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ScInstallmentsRecord> getPrimaryKey() {
        return Keys.KEY_SC_INSTALLMENTS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ScInstallmentsRecord>> getKeys() {
        return Arrays.<UniqueKey<ScInstallmentsRecord>>asList(Keys.KEY_SC_INSTALLMENTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScInstallments as(String alias) {
        return new ScInstallments(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ScInstallments rename(String name) {
        return new ScInstallments(name, null);
    }
}
